// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Referral2.Data;

namespace Referral2.Data.Migrations
{
    [DbContext(typeof(ReferralDbContext))]
    partial class ReferralDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Referral2.Models.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ActionMd")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateReferred")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSeen")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<int?>("ReferredFrom")
                        .HasColumnType("int");

                    b.Property<int?>("ReferredTo")
                        .HasColumnType("int");

                    b.Property<int?>("ReferringMd")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ActionMd")
                        .HasName("IX_IIActivity_ActionMd");

                    b.HasIndex("DepartmentId")
                        .HasName("IX_IIActivity_DepartmentId");

                    b.HasIndex("PatientId")
                        .HasName("IX_IIActivity_PatientId");

                    b.HasIndex("ReferredFrom")
                        .HasName("IX_IIActivity_ReferredFrom");

                    b.HasIndex("ReferredTo")
                        .HasName("IX_IIActivity_ReferredTo");

                    b.HasIndex("ReferringMd")
                        .HasName("IX_IIActivity_ReferringMd");

                    b.ToTable("Activity");
                });

            modelBuilder.Entity("Referral2.Models.Baby", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BabyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("GestationalAge")
                        .HasColumnType("int");

                    b.Property<int>("MotherId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BabyId");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasName("AK_IIBaby_Id");

                    b.HasIndex("MotherId");

                    b.ToTable("Baby");
                });

            modelBuilder.Entity("Referral2.Models.Barangay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("MuncityId")
                        .HasColumnType("int");

                    b.Property<int>("OldTarget")
                        .HasColumnType("int");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<int>("Target")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MuncityId")
                        .HasName("IX_IIBarangay_MuncityId");

                    b.HasIndex("ProvinceId")
                        .HasName("IX_IIBarangay_ProvinceId");

                    b.ToTable("Barangay");
                });

            modelBuilder.Entity("Referral2.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("Referral2.Models.Facility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbrevation")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Address")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int?>("BarangayId")
                        .HasColumnType("int");

                    b.Property<string>("ChiefHospital")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Contact")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("HospitalLevel")
                        .HasColumnType("int");

                    b.Property<string>("HospitalType")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("MuncityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Picture")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int?>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BarangayId")
                        .HasName("IX_IIFacility_BarangayId");

                    b.HasIndex("MuncityId")
                        .HasName("IX_IIFacility_MuncityId");

                    b.HasIndex("ProvinceId")
                        .HasName("IX_IIFacility_ProvinceId");

                    b.ToTable("Facility");
                });

            modelBuilder.Entity("Referral2.Models.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int?>("RecieverId")
                        .HasColumnType("int");

                    b.Property<int?>("SenderId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RecieverId");

                    b.HasIndex("SenderId");

                    b.ToTable("Feedback");
                });

            modelBuilder.Entity("Referral2.Models.Issue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Issue1")
                        .IsRequired()
                        .HasColumnName("Issue")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("TrackingId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TrackingId")
                        .HasName("IX_IIIssue_TrackingId");

                    b.ToTable("Issue");
                });

            modelBuilder.Entity("Referral2.Models.Login", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Login1")
                        .HasColumnName("Login")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Logout")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .HasName("IX_IILogin_UserId");

                    b.ToTable("Login");
                });

            modelBuilder.Entity("Referral2.Models.Muncity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProvinceId")
                        .HasName("IX_IIMuncity_ProvinceId");

                    b.ToTable("Muncity");
                });

            modelBuilder.Entity("Referral2.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("BarangayId")
                        .HasColumnType("int");

                    b.Property<string>("CivilStatus")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("MuncityId")
                        .HasColumnType("int");

                    b.Property<string>("PhicId")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PhicStatus")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("TsekapPatient")
                        .HasColumnType("int");

                    b.Property<string>("UniqueId")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BarangayId")
                        .HasName("IX_IIPatients_BarangayId");

                    b.HasIndex("MuncityId")
                        .HasName("IX_IIPatients_MuncityId");

                    b.HasIndex("ProvinceId")
                        .HasName("IX_IIPatients_ProvinceId");

                    b.ToTable("Patient");
                });

            modelBuilder.Entity("Referral2.Models.PatientForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CaseSummary")
                        .HasColumnType("text");

                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Diagnosis")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("RecommendSummary")
                        .HasColumnType("text");

                    b.Property<int?>("ReferredMd")
                        .HasColumnType("int");

                    b.Property<int?>("ReferredTo")
                        .HasColumnType("int");

                    b.Property<int?>("ReferringFacilityId")
                        .HasColumnType("int");

                    b.Property<int?>("ReferringMd")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeReferred")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimeTransferred")
                        .HasColumnType("datetime2");

                    b.Property<string>("UniqueId")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId")
                        .HasName("IX_IIPatientForm_DepartmentId");

                    b.HasIndex("PatientId")
                        .HasName("IX_IIPatientForm_PatientId");

                    b.HasIndex("ReferredMd")
                        .HasName("IX_IIPatientForm_ReferredMd");

                    b.HasIndex("ReferredTo")
                        .HasName("IX_IIPatientForm_ReferredTo");

                    b.HasIndex("ReferringFacilityId")
                        .HasName("IX_IIPatientForm_ReferringFacilityId");

                    b.HasIndex("ReferringMd")
                        .HasName("IX_IIPatientForm_ReferringMd");

                    b.ToTable("PatientForm");
                });

            modelBuilder.Entity("Referral2.Models.PregnantForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArrivalDate")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("BabyBeforeGivenTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("BabyBeforeTreatment")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("BabyDuringTransport")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("BabyInformationGiven")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("BabyLastFeed")
                        .HasColumnType("datetime2");

                    b.Property<string>("BabyMajorFindings")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("BabyReason")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("BabyTransportGivenTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("HealthWorker")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("PatientBabyId")
                        .HasColumnType("int");

                    b.Property<int>("PatientWomanId")
                        .HasColumnType("int");

                    b.Property<string>("RecordNo")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("ReferredBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReferredDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReferredTo")
                        .HasColumnType("int");

                    b.Property<int>("ReferringFacility")
                        .HasColumnType("int");

                    b.Property<string>("UniqueId")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("WomanBeforeGivenTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("WomanBeforeTreatment")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("WomanDuringTransport")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("WomanInformationGiven")
                        .HasColumnType("text");

                    b.Property<string>("WomanMajorFindings")
                        .HasColumnType("text");

                    b.Property<string>("WomanReason")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("WomanTransportGivenTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId")
                        .HasName("IX_IIPregnantForm_DepartmentId");

                    b.HasIndex("PatientBabyId");

                    b.HasIndex("PatientWomanId")
                        .HasName("IX_IIPregnantForm_PatientWomanId");

                    b.HasIndex("ReferredBy")
                        .HasName("IX_IIPregnantForm_ReferredBy");

                    b.HasIndex("ReferredTo")
                        .HasName("IX_IIPregnantForm_ReferredTo");

                    b.HasIndex("ReferringFacility")
                        .HasName("IX_IIPregnantForm_ReferringFacility");

                    b.ToTable("PregnantForm");
                });

            modelBuilder.Entity("Referral2.Models.Province", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Province");
                });

            modelBuilder.Entity("Referral2.Models.Seen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("FacilityId")
                        .HasColumnType("int");

                    b.Property<int>("TrackingId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserMd")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FacilityId")
                        .HasName("IX_IISeen_FacilityId");

                    b.HasIndex("TrackingId")
                        .HasName("IX_IISeen_TrackingId");

                    b.HasIndex("UserMd")
                        .HasName("IX_IISeen_UserMd");

                    b.ToTable("Seen");
                });

            modelBuilder.Entity("Referral2.Models.StoredProcedures.Incoming", b =>
                {
                    b.Property<int>("ActionMd")
                        .HasColumnType("int")
                        .IsUnicode(false);

                    b.Property<int?>("ActionMdNavigationId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime>("DateAction")
                        .HasColumnType("datetime2");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<int>("ReferredFrom")
                        .HasColumnType("int");

                    b.Property<int?>("ReferredFromNavigationId")
                        .HasColumnType("int");

                    b.Property<int>("ReferringMd")
                        .HasColumnType("int")
                        .IsUnicode(false);

                    b.Property<int?>("ReferringMdNavigationId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Type")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.HasIndex("ActionMdNavigationId");

                    b.HasIndex("PatientId")
                        .HasName("IX_IITracking_PatientId");

                    b.HasIndex("ReferredFrom")
                        .HasName("IX_IITracking_ReferredFrom");

                    b.HasIndex("ReferredFromNavigationId");

                    b.HasIndex("ReferringMdNavigationId");

                    b.ToTable("Incoming");
                });

            modelBuilder.Entity("Referral2.Models.Tracking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ActionMd")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateAccepted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateArrived")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateReferred")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSeen")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTransferred")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int?>("FormId")
                        .HasColumnType("int");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<int?>("ReferredFrom")
                        .HasColumnType("int");

                    b.Property<int?>("ReferredTo")
                        .HasColumnType("int");

                    b.Property<int?>("ReferringMd")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Transportation")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Type")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("WalkIn")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("ActionMd");

                    b.HasIndex("DepartmentId")
                        .HasName("IX_IITracking_DepartmentId");

                    b.HasIndex("PatientId")
                        .HasName("IX_IITracking_PatientId");

                    b.HasIndex("ReferredFrom")
                        .HasName("IX_IITracking_ReferredFrom");

                    b.HasIndex("ReferredTo")
                        .HasName("IX_IITracking_ReferredTo");

                    b.HasIndex("ReferringMd");

                    b.ToTable("Tracking");
                });

            modelBuilder.Entity("Referral2.Models.Transportation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Transportation1")
                        .IsRequired()
                        .HasColumnName("Transportation")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Transportation");
                });

            modelBuilder.Entity("Referral2.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccreditationNo")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("AccreditationValidity")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int?>("BarangayId")
                        .HasColumnType("int");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Designation")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("FacilityId")
                        .HasColumnType("int");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("LicenseNo")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("LoginStatus")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Middlename")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("MuncityId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Picture")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Prefix")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<string>("RemeberToken")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Status")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Title")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("BarangayId")
                        .HasName("IX_IIUser_BarangayId");

                    b.HasIndex("DepartmentId")
                        .HasName("IX_IIUser_DepartmentId");

                    b.HasIndex("FacilityId")
                        .HasName("IX_IIUser_FacilityId");

                    b.HasIndex("MuncityId")
                        .HasName("IX_IIUser_MuncityId");

                    b.HasIndex("ProvinceId")
                        .HasName("IX_IIUser_ProvinceId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Referral2.Models.Activity", b =>
                {
                    b.HasOne("Referral2.Models.User", "ActionMdNavigation")
                        .WithMany("ActivityActionMdNavigation")
                        .HasForeignKey("ActionMd")
                        .HasConstraintName("FK_Activity_User_To");

                    b.HasOne("Referral2.Models.Department", "Department")
                        .WithMany("Activity")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_Activity_Department");

                    b.HasOne("Referral2.Models.Patient", "Patient")
                        .WithMany("Activity")
                        .HasForeignKey("PatientId")
                        .HasConstraintName("FK_Activity_Patient")
                        .IsRequired();

                    b.HasOne("Referral2.Models.Facility", "ReferredFromNavigation")
                        .WithMany("ActivityReferredFromNavigation")
                        .HasForeignKey("ReferredFrom")
                        .HasConstraintName("FK_Activity_Facility_From");

                    b.HasOne("Referral2.Models.Facility", "ReferredToNavigation")
                        .WithMany("ActivityReferredToNavigation")
                        .HasForeignKey("ReferredTo")
                        .HasConstraintName("FK_Activity_Facilit_To");

                    b.HasOne("Referral2.Models.User", "ReferringMdNavigation")
                        .WithMany("ActivityReferringMdNavigation")
                        .HasForeignKey("ReferringMd")
                        .HasConstraintName("FK_Activity_User_From");
                });

            modelBuilder.Entity("Referral2.Models.Baby", b =>
                {
                    b.HasOne("Referral2.Models.Patient", "BabyNavigation")
                        .WithMany("BabyBabyNavigation")
                        .HasForeignKey("BabyId")
                        .HasConstraintName("FK_Patient_BabyId")
                        .IsRequired();

                    b.HasOne("Referral2.Models.Patient", "Mother")
                        .WithMany("BabyMother")
                        .HasForeignKey("MotherId")
                        .HasConstraintName("FK_Patient_MotherId")
                        .IsRequired();
                });

            modelBuilder.Entity("Referral2.Models.Barangay", b =>
                {
                    b.HasOne("Referral2.Models.Muncity", "Muncity")
                        .WithMany("Barangay")
                        .HasForeignKey("MuncityId")
                        .HasConstraintName("FK_Barangay_Muncity")
                        .IsRequired();

                    b.HasOne("Referral2.Models.Province", "Province")
                        .WithMany("Barangay")
                        .HasForeignKey("ProvinceId")
                        .HasConstraintName("FK_Barangay_Province")
                        .IsRequired();
                });

            modelBuilder.Entity("Referral2.Models.Facility", b =>
                {
                    b.HasOne("Referral2.Models.Barangay", "Barangay")
                        .WithMany("Facility")
                        .HasForeignKey("BarangayId")
                        .HasConstraintName("FK_Facility_Barangay");

                    b.HasOne("Referral2.Models.Muncity", "Muncity")
                        .WithMany("Facility")
                        .HasForeignKey("MuncityId")
                        .HasConstraintName("FK_Facility_Muncity");

                    b.HasOne("Referral2.Models.Province", "Province")
                        .WithMany("Facility")
                        .HasForeignKey("ProvinceId")
                        .HasConstraintName("FK_Facility_Province");
                });

            modelBuilder.Entity("Referral2.Models.Feedback", b =>
                {
                    b.HasOne("Referral2.Models.User", "Reciever")
                        .WithMany("FeedbackReciever")
                        .HasForeignKey("RecieverId")
                        .HasConstraintName("FK_Feedback_MDReciever");

                    b.HasOne("Referral2.Models.User", "Sender")
                        .WithMany("FeedbackSender")
                        .HasForeignKey("SenderId")
                        .HasConstraintName("FK_Feedback_MDSender");
                });

            modelBuilder.Entity("Referral2.Models.Issue", b =>
                {
                    b.HasOne("Referral2.Models.Tracking", "Tracking")
                        .WithMany("Issue")
                        .HasForeignKey("TrackingId")
                        .HasConstraintName("FK_Issue_Tracking")
                        .IsRequired();
                });

            modelBuilder.Entity("Referral2.Models.Login", b =>
                {
                    b.HasOne("Referral2.Models.User", "User")
                        .WithMany("Login")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Login_User_Id")
                        .IsRequired();
                });

            modelBuilder.Entity("Referral2.Models.Muncity", b =>
                {
                    b.HasOne("Referral2.Models.Province", "Province")
                        .WithMany("Muncity")
                        .HasForeignKey("ProvinceId")
                        .HasConstraintName("FK_Muncity_Province")
                        .IsRequired();
                });

            modelBuilder.Entity("Referral2.Models.Patient", b =>
                {
                    b.HasOne("Referral2.Models.Barangay", "Barangay")
                        .WithMany("Patient")
                        .HasForeignKey("BarangayId")
                        .HasConstraintName("FK_Patients_Barangay");

                    b.HasOne("Referral2.Models.Muncity", "Muncity")
                        .WithMany("Patient")
                        .HasForeignKey("MuncityId")
                        .HasConstraintName("FK_Patients_Muncity");

                    b.HasOne("Referral2.Models.Province", "Province")
                        .WithMany("Patient")
                        .HasForeignKey("ProvinceId")
                        .HasConstraintName("FK_Patients_Province");
                });

            modelBuilder.Entity("Referral2.Models.PatientForm", b =>
                {
                    b.HasOne("Referral2.Models.Department", "Department")
                        .WithMany("PatientForm")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_PatientForm_Department");

                    b.HasOne("Referral2.Models.Patient", "Patient")
                        .WithMany("PatientForm")
                        .HasForeignKey("PatientId")
                        .HasConstraintName("FK_PatientForm_Patient_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Referral2.Models.User", "ReferredMdNavigation")
                        .WithMany("PatientFormReferredMdNavigation")
                        .HasForeignKey("ReferredMd");

                    b.HasOne("Referral2.Models.Facility", "ReferredToNavigation")
                        .WithMany("PatientFormReferredToNavigation")
                        .HasForeignKey("ReferredTo")
                        .HasConstraintName("FK_PatientForm_Facility_To");

                    b.HasOne("Referral2.Models.Facility", "ReferringFacility")
                        .WithMany("PatientFormReferringFacility")
                        .HasForeignKey("ReferringFacilityId")
                        .HasConstraintName("FK_PatientForm_Facility_From");

                    b.HasOne("Referral2.Models.User", "ReferringMdNavigation")
                        .WithMany("PatientFormReferringMdNavigation")
                        .HasForeignKey("ReferringMd");
                });

            modelBuilder.Entity("Referral2.Models.PregnantForm", b =>
                {
                    b.HasOne("Referral2.Models.Department", "Department")
                        .WithMany("PregnantForm")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_PregnantForm_Department")
                        .IsRequired();

                    b.HasOne("Referral2.Models.Patient", "PatientBaby")
                        .WithMany("PregnantFormPatientBaby")
                        .HasForeignKey("PatientBabyId")
                        .HasConstraintName("FK_PregnantForm_BabyId");

                    b.HasOne("Referral2.Models.Patient", "PatientWoman")
                        .WithMany("PregnantFormPatientWoman")
                        .HasForeignKey("PatientWomanId")
                        .HasConstraintName("FK_PregnantForm_MotherId")
                        .IsRequired();

                    b.HasOne("Referral2.Models.User", "ReferredByNavigation")
                        .WithMany("PregnantForm")
                        .HasForeignKey("ReferredBy")
                        .HasConstraintName("FK_PregnantForm_User_From")
                        .IsRequired();

                    b.HasOne("Referral2.Models.Facility", "ReferredToNavigation")
                        .WithMany("PregnantFormReferredToNavigation")
                        .HasForeignKey("ReferredTo")
                        .HasConstraintName("FK_PregnantForm_Facility_To")
                        .IsRequired();

                    b.HasOne("Referral2.Models.Facility", "ReferringFacilityNavigation")
                        .WithMany("PregnantFormReferringFacilityNavigation")
                        .HasForeignKey("ReferringFacility")
                        .HasConstraintName("FK_PregnantForm_Facility_From")
                        .IsRequired();
                });

            modelBuilder.Entity("Referral2.Models.Seen", b =>
                {
                    b.HasOne("Referral2.Models.Facility", "Facility")
                        .WithMany("Seen")
                        .HasForeignKey("FacilityId")
                        .HasConstraintName("FK_Seen_Facility")
                        .IsRequired();

                    b.HasOne("Referral2.Models.Tracking", "Tracking")
                        .WithMany("Seen")
                        .HasForeignKey("TrackingId")
                        .HasConstraintName("FK_Seen_Tracking")
                        .IsRequired();

                    b.HasOne("Referral2.Models.User", "UserMdNavigation")
                        .WithMany("Seen")
                        .HasForeignKey("UserMd")
                        .HasConstraintName("FK_Seen_User_Id")
                        .IsRequired();
                });

            modelBuilder.Entity("Referral2.Models.StoredProcedures.Incoming", b =>
                {
                    b.HasOne("Referral2.Models.User", "ActionMdNavigation")
                        .WithMany()
                        .HasForeignKey("ActionMdNavigationId");

                    b.HasOne("Referral2.Models.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Referral2.Models.Facility", "ReferredFromNavigation")
                        .WithMany()
                        .HasForeignKey("ReferredFromNavigationId");

                    b.HasOne("Referral2.Models.User", "ReferringMdNavigation")
                        .WithMany()
                        .HasForeignKey("ReferringMdNavigationId");
                });

            modelBuilder.Entity("Referral2.Models.Tracking", b =>
                {
                    b.HasOne("Referral2.Models.User", "ActionMdNavigation")
                        .WithMany("TrackingActionMdNavigation")
                        .HasForeignKey("ActionMd");

                    b.HasOne("Referral2.Models.Department", "Department")
                        .WithMany("Tracking")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_Tracking_Department");

                    b.HasOne("Referral2.Models.Patient", "Patient")
                        .WithMany("Tracking")
                        .HasForeignKey("PatientId")
                        .HasConstraintName("FK_Tracking_Patients")
                        .IsRequired();

                    b.HasOne("Referral2.Models.Facility", "ReferredFromNavigation")
                        .WithMany("TrackingReferredFromNavigation")
                        .HasForeignKey("ReferredFrom")
                        .HasConstraintName("FK_Tracking_Facility_From");

                    b.HasOne("Referral2.Models.Facility", "ReferredToNavigation")
                        .WithMany("TrackingReferredToNavigation")
                        .HasForeignKey("ReferredTo")
                        .HasConstraintName("FK_Tracking_Facility_To");

                    b.HasOne("Referral2.Models.User", "ReferringMdNavigation")
                        .WithMany("TrackingReferringMdNavigation")
                        .HasForeignKey("ReferringMd");
                });

            modelBuilder.Entity("Referral2.Models.User", b =>
                {
                    b.HasOne("Referral2.Models.Barangay", "Barangay")
                        .WithMany("User")
                        .HasForeignKey("BarangayId")
                        .HasConstraintName("FK_User_Barangay");

                    b.HasOne("Referral2.Models.Department", "Department")
                        .WithMany("User")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_User_Department")
                        .IsRequired();

                    b.HasOne("Referral2.Models.Facility", "Facility")
                        .WithMany("User")
                        .HasForeignKey("FacilityId")
                        .HasConstraintName("FK_User_Facility")
                        .IsRequired();

                    b.HasOne("Referral2.Models.Muncity", "Muncity")
                        .WithMany("User")
                        .HasForeignKey("MuncityId")
                        .HasConstraintName("FK_User_Muncity");

                    b.HasOne("Referral2.Models.Province", "Province")
                        .WithMany("User")
                        .HasForeignKey("ProvinceId")
                        .HasConstraintName("FK_User_Province")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
