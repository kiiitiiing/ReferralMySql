@model PaginatedList<Referral2.Models.ViewModels.Inventory.InventoryModel>

@{
    ViewData["Title"] = "Inventory";
    var NumAdmission = Model.FirstOrDefault(x => x.Name.Contains("Admission"));

}


<div class="col-md-12">

    <!-- CARD START-->
    <div class="card">
        <!-- CARD DANGER HEADER -->
        <div class="card-header">
            <div class="row">
                <div class="col-md-6">
                    <h3 class="">Level of Care Inventory</h3><br />
                    <h4 class="text-green">@User.FindFirstValue("FacilityName")</h4>
                </div>
                <div class="col-md-6">
                    <form class="fa-pull-right form-inline ml-3" asp-action="FacilityInventory" method="get">
                        <div class="form-actions note-color">
                            <!-- INPUT -->
                            <input class="form-control form-control-sm"
                                   name="name"
                                   placeholder="Search inventory"
                                   type="text"
                                   value="@ViewBag.Search" />
                            <button type="submit" value="Search" class="btn btn-sm btn-success">
                                <i class="fa fa-search"></i>&nbsp;
                                Search
                            </button>
                            <a class="btn btn-sm bg-gradient-orange" asp-action="FacilityInventory">
                                <i class="fa fa-eye"></i>&nbsp;
                                View All
                            </a>
                        </div>
                    </form>
                </div>
            </div>
            @if (NumAdmission != null)
            {
                <div class="row">
                    <table class="table table-hover table-bordered" style="width: 40%">
                        <tbody>
                            <tr>
                                <td>No. of Patients Waiting for Admission:</td>
                                <td width="7%"><b class="text-red" style="font-size: 15pt;">@NumAdmission.Capacity</b></td>
                                <td width="7%"><button class="btn btn-sm btn-success" href="#bed_modal" data-toggle="modal" onclick="inventoryUpdate(120)">Update</button></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            }
        </div>
        <!-- CARD DANGER BODY -->
        <form method="post" action="">
            <input type="hidden" name="_token" value="" autocomplete="off" />
            <div class="card-body">
                @if (Model.Count() > 0)
                {
                    var ctr = 1;
                    <table class="table table-striped" width="100%">
                        <thead>
                            <tr class="bg-gray-dark">
                                <th> </th>
                                <th>
                                    Description
                                </th>
                                <th>
                                    Capacity
                                </th>
                                <th>
                                    Occupied
                                </th>
                                <th>
                                    Available
                                </th>
                                <th>
                                    Option
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Where(x=> !x.Name.Contains("Admission")))
                            {
                                <tr>
                                    <td>
                                        @ctr
                                    </td>
                                    <td>
                                        @item.Name
                                    </td>
                                    <td>
                                        <strong class="text-blue">@item.Capacity</strong>
                                    </td>
                                    <td>
                                        <strong class="text-blue">@item.Occupied</strong>
                                    </td>
                                    <td>
                                        @item.Available
                                    </td>
                                    <td>
                                        <a id="update_inventory"
                                           class="btn btn-success"
                                           data-toggle="ajax-modal"
                                           data-target="#small_modal"
                                           data-action="#small_content"
                                           data-url="@Url.Action("UpdateInventory","Inventory", new { id = item.Id })"
                                           onclick="OpenModal($(this));">
                                            Update
                                        </a>
                                    </td>
                                </tr>
                                ctr++;
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <div class="alert alert-warning">
                        <span class="text-lg">
                            <i class="fa fa-exclamation-triangle"></i>
                            &nbsp;No data found!
                        </span>
                    </div>
                }

                @await Html.PartialAsync("~/Views/Shared/PartialViews/_PageList.cshtml", new PageListModel
               {
                   Action = "Archived",
                   HasNextPage = Model.HasNextPage,
                   HasPreviousPage = Model.HasPreviousPage,
                   PageIndex = Model._pageIndex,
                   TotalPages = Model._totalPages,
                   Parameters = new Dictionary<string, string>
                    {
                       { "page", Model._pageIndex.ToString() },
                       { "name", ViewBag.Search }
                    }
                })
            </div>
        </form>
    </div>
</div>


