@model PaginatedList<ReferralStatusViewModel>
@{
    ViewData["Title"] = "Referral Status";
    var bgColor = "";

    var startDate = ViewBag.StartDate;
    var endDate = ViewBag.EndDate;
    var dateRange = startDate.ToString("yyyy/MM/dd") + " - " + endDate.ToString("yyyy/MM/dd");
    void SetBgColor(string status)
    {
        if (status.Equals("accepted") || status.Equals("arrived"))
            bgColor = "custom-bg-success";
        else if (status.Equals("Seen"))
            bgColor = "custom-bg-danger";
        else if (status.Equals("discharged") || status.Equals("admitted"))
            bgColor = "custom-bg-warning";
        else
            bgColor = "";
    }
}



<div class="card card-outline card-success">
    <div class="card-header">
        @await Html.PartialAsync("~/Views/Shared/PartialViews/_DateFilter.cshtml", new SearchModel
            {
                Action = "ReferralStatus"
            })
        <h4>
            Referral Status
            <br />
            <small class="text-success">
                @startDate.ToString("MMMM dd, yyyy") - @endDate.ToString("MMMM dd, yyyy")
            </small>
        </h4>
    </div>
    <div class="card-body">
        @if (Model.Count() != 0)
        {

            <div class="table-responsive">
                <table class="table table-hover table-bordered" style="font-size: 14px;">
                    <!-- TABLE HEADER -->
                    <thead>
                        <tr class="bg-black">
                            <th>Date Referred</th>
                            <th>Referred From</th>
                            <th>Referred To</th>
                            <th>Department</th>
                            <th>Patient Name</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            var facilityFrom = item.FacilityFrom.Length > 25 ? new string(item.FacilityFrom.Take(25).ToArray()) + "..." : item.FacilityFrom;
                            var facilityTo = item.FacilityTo.Length > 25 ? new string(item.FacilityTo.Take(25).ToArray()) + "..." : item.FacilityTo;
                            SetBgColor(item.Status);

                            var dateReferred = item.DateReferred.ToString("MMM dd, hh:mm tt", System.Globalization.CultureInfo.InvariantCulture);

                            <tr class="@bgColor">
                                <td class="text-success">@dateReferred</td>
                                <td class="custom-warning" title="@item.FacilityFrom">@facilityFrom</td>
                                <td class="custom-warning" title="@item.FacilityTo">@facilityTo</td>
                                <td class="text-maroon">@item.Department</td>
                                <td class="text-blue">@item.PatientName.NameToUpper()</td>
                                <td class="text-maroon">@item.Status</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="alert alert-warning">
                <span class="text-lg">
                    <i class="fa fa-exclamation-triangle"></i>
                    &nbsp;No Data Found!
                </span>
            </div>
        }
    </div>
    <div class="card-footer">
        @await Html.PartialAsync("~/Views/Shared/PartialViews/_PageList.cshtml", new PageListModel
               {
                   Action = "ReferralStatus",
                   HasNextPage = Model.HasNextPage,
                   HasPreviousPage = Model.HasPreviousPage,
                   PageIndex = Model._pageIndex,
                   TotalPages = Model._totalPages,
                   Parameters = new Dictionary<string, string>
                   {
                       { "dateRange", dateRange }
                   }
               })
    </div>
</div>

