@model IEnumerable<OnboardModel>

@{
    ViewData["Title"] = "Onboard Facilities";

}

<div class="col-md-12">
    <div class="card card-success card-outline">
        <div class="card-header">
            <h4>
                Onboard Facilities
            </h4>
        </div>
        <div class="card-body">
            @if (Model.Count() != 0)
            {
                <div class="table-responsive">
                    <table class="table table-bordered table-hover">
                        <thead>
                            <tr class="bg-black">
                                <th> </th>
                                <th>Facility Name</th>
                                <th>Chief Hospital</th>
                                <th>Contact No</th>
                                <th>Registered At</th>
                                <th>Login At</th>
                                <th>Hospital Type</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.GroupBy(x => x.Province).Where(x => x.Key == "Cebu" || x.Key == "Bohol"))
                            {
                                var ctr = 1;
                                var gob = (double)item.Where(x => x.Type == "government" && x.LoginAt != default).Count();
                                var gr = (double)item.Where(x => x.Type == "government").Count();
                                var gp = Math.Round((gob / gr) * 100);
                                var prob = (double)item.Where(x => x.Type == "private" && x.LoginAt != default).Count();
                                var prr = (double)item.Where(x => x.Type == "private").Count();
                                var prp = Math.Round((prob / prr) * 100);
                                var gTrans = item.Where(x=>x.Type == "government").Where(x => x.ActivitiesFrom == true || x.ActivitiesTo == true).Count();
                                var gNoTrans = gob - gTrans;
                                var pTrans = item.Where(x => x.Type == "private").Where(x => x.ActivitiesFrom == true || x.ActivitiesTo == true).Count();
                                var pNoTrans = prob - pTrans;
                                var overall = Math.Round(((gob + prob) / (gr + prr)) * 100);
                                <tr> 
                                    <td colspan="7"> 
                                        <div class="form-group">
                                            <b style="color: #ff298e;font-size: 17pt;">@item.Key Province</b><br>
                                            <!-- CHART -->
                                            <div id="overall_chart_@item.Key" style="height: 200px; width: 100%;"></div>
                                            <strong class="text-green">Overall - </strong>
                                            <span class="progress-number"><b class="facility_onboard2">@(gob+prob)</b> <small class="text-blue">(ON BOARD)</small> / <b class="facility_total2">@(gr+prr)</b> <small class="text-blue">(REGISTER)</small></span> = <b class="text-red facility_percent2">@overall%</b>
                                            <div class="progress progress-sm active">
                                                <div class="progress-bar progress-bar-striped facility_progress2" style="width: @overall%;"></div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <!-- CHART -->
                                            <div id="government_chart_@item.Key" style="height: 200px; width: 100%;"></div>
                                            <strong class="text-green">Government Hospital - </strong>
                                            <span class="progress-number"><b class="government_hospital2">@gob</b> <small class="text-blue">(ON BOARD)</small> / <b class="government_hospital_total2">@gr</b><small class="text-blue">(REGISTER)</small></span> = <b class="text-red government_percent2">@gp%</b>
                                            <div class="progress progress-sm active">
                                                <div class="progress-bar progress-bar-striped facility_progress2" style="width: @gp%;"></div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <!-- CHART -->
                                            <div id="private_chart_@item.Key" style="height: 200px; width: 100%;"></div>
                                            <strong class="text-green">Private Hospital - </strong>
                                            <span class="progress-number"><b class="private_hospital2">@prob</b> <small class="text-blue">(ON BOARD)</small> / <b class="private_hospital_total2">@prr</b> <small class="text-blue">(REGISTER)</small></span> = <b class="text-red private_percent2">@prp%</b>
                                            <div class="progress progress-sm active">
                                                <div class="progress-bar progress-bar-striped facility_progress2" style="width: @prp%;"></div>
                                            </div>
                                        </div>
                                        <script>
                                            $(function () {
                                                CanvasJS.addColorSet("greenShades",
                                                    [//colorSet Array
                                                        "#6762ff",
                                                        "#ff686b"
                                                    ]);
                                                //overall
                                                var with_transaction_@item.Key = Math.round('@(((gTrans+pTrans)/(gob+prob))*100)');
                                                var no_transaction_@item.Key = Math.round('@(((gNoTrans+pNoTrans)/ (gob + prob)) *100)');
                                                if ('@(gob+prob)' == '0') {
                                                    with_transaction_@item.Key = 0;
                                                    no_transaction_@item.Key = 0;
                                                }
                                                var overall = new CanvasJS.Chart("overall_chart_@item.Key", {
                                                    colorSet: "greenShades",
                                                    exportEnabled: true,
                                                    animationEnabled: true,
                                                    title: {
                                                        text: "Overall"
                                                    },
                                                    data: [{
                                                        type: "pie",
                                                        startAngle: 45,
                                                        showInLegend: "true",
                                                        toolTipContent: "{y}%",
                                                        legendText: "{label}",
                                                        yValueFormatString:"#,##0.#"%"",
                                                        dataPoints: [
                                                            { label: "With Transaction in " + with_transaction_@item.Key + "% in " + "@(gTrans+pTrans) out of @(gob+prob)", legendText: "With Transaction", y: with_transaction_@item.Key },
                                                            { label: "No Transaction in " + no_transaction_@item.Key + "% in " + "@(gNoTrans+pNoTrans) out of @(gob + prob)", legendText: "No Transaction", y: no_transaction_@item.Key }
                                                        ]
                                                    }]
                                                });
                                                overall.render();
                                                //government
                                                var gov_with_transaction_@item.Key = Math.round('@((gTrans/gob)*100)');
                                                var gov_no_transaction_@item.Key = Math.round('@((gNoTrans/ gob) *100)');
                                                if ('@gob' == '0') {
                                                    gov_with_transaction_@item.Key = 0;
                                                    gov_no_transaction_@item.Key = 0;
                                                }
                                                var government = new CanvasJS.Chart("government_chart_@item.Key", {
                                                    colorSet: "greenShades",
                                                    exportEnabled: true,
                                                    animationEnabled: true,
                                                    title: {
                                                        text: "Government"
                                                    },
                                                    data: [{
                                                        type: "pie",
                                                        startAngle: 45,
                                                        showInLegend: "true",
                                                        toolTipContent: "{y}%",
                                                        legendText: "{label}",
                                                        yValueFormatString:"#,##0.#"%"",
                                                        dataPoints: [
                                                            { label: "With Transaction in " + gov_with_transaction_@item.Key + "% in " + "@gTrans out of @gob", legendText: "With Transaction", y: gov_with_transaction_@item.Key },
                                                            { label: "No Transaction in " + gov_no_transaction_@item.Key + "% in " + "@gNoTrans out of @gob", legendText: "No Transaction", y: gov_no_transaction_@item.Key }
                                                        ]
                                                    }]
                                                });
                                                government.render();
                                                //private
                                                var priv_with_transaction_@item.Key = Math.round('@(((pTrans)/(prob))*100)');
                                                var priv_no_transaction_@item.Key = Math.round('@(((pNoTrans)/ (prob)) *100)');
                                                if ('@prob' == '0') {
                                                    priv_with_transaction_@item.Key = 0;
                                                    priv_no_transaction_@item.Key = 0;
                                                }
                                                console.log(priv_with_transaction_@item.Key);
                                                console.log(priv_no_transaction_@item.Key);

                                                var private = new CanvasJS.Chart("private_chart_@item.Key", {
                                                    colorSet: "greenShades",
                                                    exportEnabled: true,
                                                    animationEnabled: true,
                                                    title: {
                                                        text: "Private"
                                                    },
                                                    data: [{
                                                        type: "pie",
                                                        startAngle: 45,
                                                        showInLegend: "true",
                                                        toolTipContent: "{y}%",
                                                        legendText: "{label}",
                                                        yValueFormatString:"#,##0.#"%"",
                                                        dataPoints: [
                                                            { label: "With Transaction in " + priv_with_transaction_@item.Key + "% in " + "@pTrans out of @prob", legendText: "With Transaction", y: priv_with_transaction_@item.Key },
                                                            { label: "No Transaction in " + priv_no_transaction_@item.Key + "% in " + "@pNoTrans out of @prob", legendText: "No Transaction", y: priv_no_transaction_@item.Key }
                                                        ]
                                                    }]
                                                });
                                                private.render();
                                            })
                                        </script>
                                    </td>
                                </tr>
                                @foreach (var facility in item.OrderBy(x => x.Type))
                                {
                                    var rowBg = "bg-yellow";
                                    var nameBg = "";
                                    var loginAt = "";
                                    var registeredAt = facility.RegisteredAt == null ? "" : facility.RegisteredAt.GetDate("MMMM dd, yyyy (h:mm tt)");
                                    if (facility.ActivitiesFrom || facility.ActivitiesTo)
                                        nameBg = "bg-yellow";
                                    else
                                        nameBg = "bg-red";
                                    if (facility.LoginAt == default)
                                    {
                                        rowBg = "";
                                        loginAt = "NOT LOGIN";
                                        nameBg = "";
                                    }
                                    else
                                    {
                                        loginAt = facility.LoginAt.GetDate("MMMM dd, yyyy (h:mm tt)");
                                    }

                                    <tr class="@rowBg">
                                        <td>@ctr</td>
                                        <td class="@nameBg">@facility.Name</td>
                                        <td>@facility.Chief</td>
                                        <td>@facility.ContactNo</td>
                                        <td>
                                            @registeredAt
                                        </td>
                                        <td>
                                            @loginAt
                                        </td>
                                        <td>
                                            @if (facility.Type == "private")
                                            {
                                                <span class="badge bg-blue">Private</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-success">Government</span>
                                            }
                                        </td>
                                    </tr>
                                    ctr++;
                                }
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="alert alert-warning">
                    <span class="">
                        <i class="fa fa-warning"></i>
                        &nbsp;No data found!
                    </span>
                </div>
            }
        </div>
    </div>
</div>

<script type="text/javascript">
    $(function () {
        $('#datetimepicker').datepicker({
            format: 'mm/dd/yyyy',
            autoclose: true,
            forceParse: true
        });
    })
</script>